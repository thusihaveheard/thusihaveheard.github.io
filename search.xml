<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[centos7搭建docker私有镜像中心]]></title>
    <url>%2F2018%2F12%2F14%2Fcentos7%E6%90%AD%E5%BB%BAdocker%E7%A7%81%E6%9C%89%E9%95%9C%E5%83%8F%E4%B8%AD%E5%BF%83%2F</url>
    <content type="text"></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Devops</tag>
        <tag>Docker</tag>
        <tag>Register</tag>
        <tag>Centos7</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Devops搭建手冊]]></title>
    <url>%2F2018%2F12%2F13%2FDevops%E6%90%AD%E5%BB%BA%E6%89%8B%E5%86%8A%2F</url>
    <content type="text"><![CDATA[Gitlab安装安装命令dpkg --force-depends -i gitlab-ce_10.3.3-ce.0_amd64.deb 备份/etc/gitlab/gitlab.rb文件cp gitlab.rb gitlab.rb.bak 修改/etc/gitlab/gitlab.rb文件external_url &quot;http://gitlab.example.com&quot; 为 external_url &quot;http://ip地址&quot; 使修改生效sudo gitlab-ctl reconfigure 默认root账号，需添加密码访问urlip:端口号(默认80) Nexus安装创建文件夹cd /usr/localmkdir nexus 下载Nexus安装包，并解压文件wget https://sonatype-download.global.ssl.fastly.net/nexus/oss/nexus-2.14.8-01-bundle.tar.gztar -xzvf nexus-2.14.8-01-bundle.tar.gz -C nexus 添加root用户vi /usr/local/nexus/nexus-2.14.8-01/bin/nexus添加 RUN_AS_USER=root保存以上修改。备注：修改前请先备份原始文件 启动Nexus/usr/local/nexus/ nexus-2.14.8-01/bin/nexus start 访问Nexusip:端口号(默认8081)/nexus 默认Nexus账号密码admin admin123 注意：下载Nexus安装包的过程可以在本机操作，然后把安装包通过FTP上传到服务器上。存储所在路径：压缩包解压后，文件夹内nexus-2.14.8-01-bundle/sonatype-work/，这个路径就是，具体存储路径可以在nexus-2.14.8-01/conf/ nexus.properties文件里进行修改。参考：https://www.linuxidc.com/Linux/2016-08/134617.htm Docker安装FTP上传Docker的deb安装文件比如上传到此目录下：/tmp/docker-ce_17.12.1_ce-0_ubuntu_amd64.deb 更新库，安装依赖apt-get updateapt-get install -y apt-utils iptables libdevmapper1.02.1 libltdl7 libseccomp2 安装Dockerdpkg -i /tmp/docker-ce_17.12.1_ce-0_ubuntu_amd64.deb 验证安装是否成功docker –version如下图，显示docker版本号则安装成功 Kubectl安装下载kubectl安装包wget https://dl.k8s.io/v1.9.3/kubernetes-client-linux-amd64.tar.gz 解压kubectl安装包tar -zxvf kubernetes-client-linux-amd64.tar.gz 进入到kubernetes/client/bin目录，并给kubectl文件赋权限cd kubernetes/client/binchmod +x ./kubectl 移动kubectl文件到/usr/local/bin/目录下sudo mv ./kubectl /usr/local/bin/kubectlsudo chmod +x /usr/local/bin/kubectl 创建.kube文件夹mkdir ~/.kube 创建config文件touch ~/.kube/config K8S的配置信息通过token添加配置信息首先：web登录到ICP 其次：复制token信息 最后：在服务器命令行执行token信息里的命令，执行完之后步骤6里的config文件里会保存有k8s的相关配置信息，但是token是有实效期的。 通过证书添加配置信息首先：向ICP管理员要三个证书，三个证书在ICP的master节点上的路径为/etc/cfc/conf/，三个证书为：ca.crt，kubecfg.crt，kubecfg.key，将三个证书存放到/etc/kubernetes/conf/目录下，如果没有请创建该目录其次：执行kubectl命令，修改config文件。kubectl config set-cluster mycluster.icp –server=https://10.8.154.198:8001 –certificate-authority=/etc/kubernetes/conf/ca.crt \&amp;&amp; kubectl config set-credentials admin –client-certificate=/etc/kubernetes/conf/kubecfg.crt –client-key=/etc/kubernetes/conf/kubecfg.key \&amp;&amp; kubectl config set-context icp –cluster=mycluster.icp –user=admin \&amp;&amp; kubectl config use-context icp \&amp;&amp; kubectl config view 下载地址：https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG-1.9.md​ 参考：​ http://blog.csdn.net/farYang/article/details/79427573​ http://blog.csdn.net/weiguang1017/article/details/69972015​ 注意：1.压缩包里只有一个kubectl文件，1,、2、3、4步已经安装好kubectl了，只是不能与k8s通讯。2.证书配置是针对管理员的，普通用户用token3.修改host文件.如：10.8.154.198 mycluster.icp 7步骤b)中的–server= https://10.8.154.198:8001要进行修改 Jenkins安装向ICP管理员索要四个证书，master三个证书，私有镜像中心一个证书。如下图所示： 将master的上个证书存放到：/etc/kubernetes/conf/将私有镜像中心的证书存放到：/etc/docker/certs.d/mycluster.icp:8500/ 注意：证书原始路径，在ICP的master节点上​ Master证书路径：/etc/cfc/conf/ca.crt/etc/cfc/conf/kubecfg.crt/etc/cfc/conf/kubecfg.key​ 私有镜像中心证书路径：/etc/docker/certs.d/mycluster.icp\:8500/ca.crt 向ICP管理员询问cluster_vip、cluster_CA_domain、proxy_vip、storageClassName的值cluster_vip：页面访问ICP的IP地址​ cluster_CA_domain：私有镜像中心域名​ proxy_vip：代理的vip，用于应用的映射​ storageClassName：PVC的时候使用 修改服务器的hosts文件，添加私有镜像中心的映射，如下图所示 在k8s集群内新建devops命名空间命令：kubectl create ns devopsICP页面创建： 根据应用的场景创建java-slave,nodejs-slave等jenkins的slave镜像从docker-hub上下载openjdk、nginx、jenkins等镜像上传5、6步骤里的镜像到ICP的私有镜像中心如何上传，请参考ICP官方文档：https://www.ibm.com/support/knowledgecenter/en/SSBS6K_2.1.0/manage_images/using_docker_cli.html 创建secretkubectl create secret docker-registry myregistrykey –docker-server=mycluster.icp:8500 –docker-username=admin –docker-password=admin --docker-email=shuaichao_gao@trtjk.com -n=devops在jenkins的yaml里添加对该secret的引用 执行jenkins、pvc等yaml文件kubectl apply -f jenkins-master-sts-dev-test.yamlkubectl apply -f jenkins-slave-glusterfs-pvc.yaml 查看jenkins的状态#查看pod状态kubectl get pods -n=devops #查看pod详细描述信息kubectl describe pods -n=devops #查看应用的日志kubectl logs -f pods -n=devops 浏览器访问jenkins，按需安装必要插件在gitlab服务器修改hosts文件，添加jenkins应用的映射 注意Gitlab、Nexus、Docker、Kubectl都是安装在ubuntu服务器上的，jenkins是安装在ICP上的。各个软件的安装包和文件已打包证书与ICP环境是对应的，不同的ICP环境证书是不一样的。]]></content>
      <categories>
        <category>Devops</category>
      </categories>
      <tags>
        <tag>Devops</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[尘归尘，土归土]]></title>
    <url>%2F2018%2F12%2F13%2F%E5%B0%98%E5%BD%92%E5%B0%98%EF%BC%8C%E5%9C%9F%E5%BD%92%E5%9C%9F%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F12%2F13%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
